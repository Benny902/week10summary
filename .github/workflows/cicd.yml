name: Microblog CICD

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

permissions:
  contents: write # needed for 'write-deployment-log'

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      selected_env: ${{ steps.setenv.outputs.env }}
    steps:
      - name: Determine selected environment
        id: setenv
        run: |
          if [ -z "${{ github.event.inputs.environment }}" ]; then
            echo "env=dev" >> "$GITHUB_OUTPUT"
          else
            echo "env=${{ github.event.inputs.environment }}" >> "$GITHUB_OUTPUT"
          fi

  backend-test:
    needs: set-environment
    uses: ./.github/workflows/backend-test.yml

  backend-notify:
    needs: [backend-test, set-environment, healthcheck]
    if: always()
    uses: ./.github/workflows/notify-backend.yml
    with:
      job_start_time: ${{ needs.backend-test.outputs.job_start_time }}
      test_status: ${{ needs.backend-test.result }}
      build_status: ${{ needs.backend-docker-build.result }}
    secrets: inherit

  frontend-test:
    needs: set-environment
    uses: ./.github/workflows/frontend-test.yml

  frontend-notify:
    needs: [frontend-test, set-environment, healthcheck]
    if: always()
    uses: ./.github/workflows/notify-frontend.yml
    with:
      job_start_time: ${{ needs.frontend-test.outputs.job_start_time }}
      test_status: ${{ needs.frontend-test.result }}
      build_status: ${{ needs.frontend-docker-build.result }}
    secrets: inherit

  gate-approval:
    if: ${{ needs.set-environment.outputs.selected_env == 'prod' }}
    needs: set-environment
    runs-on: ubuntu-latest
    environment:
      name: prod
    outputs:
      approved_env: ${{ needs.set-environment.outputs.selected_env }}
    steps:
      - name: Await manual approval for prod
        run: echo "Approval granted for prod deployment"

  setup-remote-state:
    needs: [backend-test, frontend-test, set-environment, gate-approval]
    if: ${{ 
      needs.set-environment.outputs.selected_env == 'dev' ||
      (needs.set-environment.outputs.selected_env == 'prod' && success()) }}
    uses: ./.github/workflows/setup-remote-state.yml
    with:
      storage-account-name: tfstateweek10infra
      container-name: tfstate
      location: westeurope
      environment: ${{ needs.set-environment.outputs.selected_env }}
    secrets: inherit

  deploy-infrastructure:
    needs: [setup-remote-state, set-environment, gate-approval]
    if: ${{ 
      needs.set-environment.outputs.selected_env == 'dev' ||
      (needs.set-environment.outputs.selected_env == 'prod' && success()) }}
    uses: ./.github/workflows/terraform-deploy.yml
    with:
      storage-account-name: ${{ needs.setup-remote-state.outputs.storage_account_name }}
      key: ${{ needs.setup-remote-state.outputs.tfstate_key }}
      environment: ${{ needs.set-environment.outputs.selected_env }}
    secrets: inherit

  create-and-attach-disk:
    needs: deploy-infrastructure
    uses: ./.github/workflows/create-disk.yml
    secrets: inherit

  get-vm-ip:
    needs: deploy-infrastructure
    uses: ./.github/workflows/get-ip.yml
    secrets: inherit

  deploy-webapp:
    needs: get-vm-ip
    uses: ./.github/workflows/deploy-webapp.yml
    with:
      vm_ip: ${{ needs.get-vm-ip.outputs.vm_ip }}
    secrets: inherit

  healthcheck:
    needs: deploy-webapp
    uses: ./.github/workflows/healthcheck.yml
    secrets: inherit

  e2e-tests:
    needs: deploy-webapp
    uses: ./.github/workflows/e2e-tests.yml

  write-deployment-log:
    needs: healthcheck
    uses: ./.github/workflows/write-deployment-log.yml
    secrets: inherit